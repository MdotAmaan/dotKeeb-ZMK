#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0 // default layer
#define MSK 4 // mouse key layer
#define MSC 6 // mouse scroll layer
/ {  
tb0_mmv_ibl {
                /* new forked compatible name */
                compatible = "zmk,input-behavior-listener";
                
                /* the input point device alias */
                device = <&trackball>;

                /* only enable in default layer (DEF) & mouse key layer (MSK) */
                layers = <DEF MSK>;

                /* designed for switching to mouse scroll, xy-swap, precise-mode+, etc */
                /* NOTE: only apply input-code overriding for INPUT_EV_REL */
                evt-type = <INPUT_EV_REL>;
                x-input-code = <INPUT_REL_X>;
                y-input-code = <INPUT_REL_Y>;
                scale-multiplier = <1>;
                scale-divisor = <1>;

                /* bind a behavior to auto activate MSK layer for &mkp */
                bindings = <&ib_tog_layer MSK>;

                /* align to CCW 45 degree */
                rotate-deg = <315>;
                /* NOTE 1: This settings do not compitable with y-invert and x-invert */
                /* NOTE 2: Floating point computation requires alot of ram. */
                /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
        };
  
        /* input config for mouse scroll mode on momentary mouse scoll layer (MSC) */
        tb0_msl_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&trackball>;
                layers = <MSC>;
                evt-type = <INPUT_EV_REL>;
                
                /* slienting x-axis with alt event code */
                x-input-code = <INPUT_REL_MISC>;
                y-input-code = <INPUT_REL_WHEEL>;

                /* invent scrolling direction */
                y-invert;

                /* align to CCW 45 degree */
                rotate-deg = <315>;
                /* NOTE 1: This settings do not compitable with y-invert and x-invert */
                /* NOTE 2: Floating point computation requires alot of ram. */
                /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */

                /* bind a behavior to down scaling input value to (1/8) */
                /* NOTE: This behavior is different to scale-divisor. */
                /*       The delta value is accumlated until result >= 1 after cast. */
                /*       The scrolling is preented in hi-res and allow precise scrolling */
                bindings = <&ib_wheel_scaler 1 8>;
        };

        /* adjust cooldown waiting period for mouse key layer (MSK) after activated */
        ib_tog_layer: ib_tog_layer {
                compatible = "zmk,input-behavior-tog-layer";
                #binding-cells = <1>;
                time-to-live-ms = <1000>;
        };

        /* define a resolution down scaler only for INPUT_REL_WHEEL */
        ib_wheel_scaler: ib_wheel_scaler {
                compatible = "zmk,input-behavior-scaler";
                #binding-cells = <2>;
                evt-type = <INPUT_EV_REL>;
                input-code = <INPUT_REL_WHEEL>;
        };
    combos {
        compatible = "zmk,combos";
        combo_sys {
            timeout-ms = <50>;
            key-positions = <38 39 40>;
            bindings = <&tog 5>;
        };
    };

    behaviors {
      hml: left_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <250>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <120>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 41 42 43 44 45 48 49>;    // <---[[right-hand keys]]
        hold-trigger-on-release;
      };

      hmr: right_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <250>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <120>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 46 47>;    // <---[[left-hand keys]]
        hold-trigger-on-release;
      };

      smart_nav: behavior_smart_nav {
        compatible = "zmk,behavior-caps-word";
        label = "SMART_NAV";
        #binding-cells = <0>;
        layers = <3>;                                
        continue-list = <LEFT DOWN UP RIGHT PG_UP PG_DN LCTRL LALT LSHFT>;  
      };

    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   0    |    1     |    2     |    3     |    4     |    5     |              |    6     |    7     |    8     |    9     |    10    |    11    |
// |   12   |    13    |    14    |    15    |    16    |    17    |              |    18    |    19    |    20    |    21    |    22    |    23    |
// |   24   |    25    |    26    |    27    |    28    |    29    |              |    30    |    31    |    32    |    33    |    34    |    35    |
//          |    36    |    37    |    38    |    39    |    40    |              |    41    |    42    |    43    |    44    |    45    |
//                                |    46    |    47    |                                    |    48    |    49    |
            bindings = <
    &out OUT_TOG &kp Q       &kp W       &kp F        &kp P        &kp B             &kp J        &kp L         &kp U        &kp Y       &kp SEMI    &tog 1
    &kp TAB      &hml LGUI A &hml LALT R &hml LSHFT S &hml LCTRL T &kp G             &kp M        &hmr LCTRL N  &hmr RSHFT E &hmr LALT I &hmr LGUI O &kp SQT
    &kp GRAVE    &kp Z       &kp X       &kp C        &kp D        &kp V             &kp K        &kp H         &kp COMMA    &kp DOT     &kp FSLH    &kp BSLH
                 &kp MINUS   &kp EQUAL   &kp SPACE    &kp LCTRL    &lt 2 ESC         &smart_nav   &mt RSHFT RET &kp BSPC     &kp LBKT    &kp RBKT
                                         &kp LALT     &kp LSHFT                      &mkp LCLK    &kp RALT      &kp DEL      &mo 6
            >;

            display-name = "BASE";
        };

        game_layer {
            bindings = <
     &kp L      &kp ESC   &kp Q     &kp W     &kp E     &kp R                      &kp Y     &kp U     &kp I     &kp O    &kp P     &tog 1
     &kp TAB    &kp LSHFT &kp A     &kp S     &kp D     &kp F                      &kp H     &kp J     &kp K     &kp L    &kp SEMI  &kp SQT
     &kp B      &kp LCTRL &kp Z     &kp X     &kp C     &kp V                      &kp N     &kp M     &kp COMMA &kp DOT  &kp FSLH  &kp BSLH
                &kp Y     &kp O     &kp T     &kp SPACE &mo 2                      &trans    &trans    &trans    &kp LBKT &kp RBKT
                                    &kp V     &kp M                                &trans    &trans    &trans    &trans
            >;
            display-name = "GAME";
        };

        l1_layer {
            bindings = <
    &caps_word      &kp F1         &kp F2           &kp F3        &kp F4        &kp F5             &kp F6    &kp F7    &kp F8    &kp F9        &kp F10   &kp F11
    &kp LG(LS(S))   &hml LGUI N1   &hml LALT N2     &hml LSHFT N3 &hml LCTRL N4 &kp N5             &kp N6    &hmr LCTRL N7 &hmr RSHFT N8 &hmr LALT N9 &hmr LGUI N0 &kp F12
    &kp LC(LA(DEL)) &kp LA(F4)     &kp C_PP         &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP       &none     &none     &trans    &trans        &trans    &trans
                    &kp C_AC_BACK  &kp C_AC_FORWARD &trans        &trans        &trans             &trans    &trans    &trans    &trans        &trans
                                                    &trans        &trans                           &trans    &trans    &trans    &trans
            >;

            display-name = "NUM";
        };

        nav_layer {
            bindings = <
     &trans     &trans    &trans    &trans   &trans   &trans                       &trans        &trans    &trans    &trans    &trans    &trans
     &trans     &trans    &trans    &trans   &trans   &trans                       &trans        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans
     &trans     &trans    &trans    &trans   &trans   &trans                       &trans        &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans
                &trans    &trans    &trans   &trans   &trans                       &trans        &trans    &trans    &kp C_AC_BACK  &kp C_AC_FORWARD
                                    &trans   &trans                                &trans        &trans    &trans    &trans
            >;

            display-name = "NAV";
        };

        mouse_layer {
            bindings = <
     &trans     &trans    &trans    &trans   &trans   &trans                      &mkp RCLK     &trans    &trans    &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                      &mkp MCLK     &trans    &trans    &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                      &trans        &trans    &trans    &trans  &trans   &trans
                &trans    &trans    &trans   &trans   &trans                      &trans        &trans    &trans    &kp C_AC_BACK  &kp C_AC_FORWARD
                                    &trans   &trans                               &trans        &trans    &trans    &trans
            >;
        };

        sys_layer {
            bindings = <
     &bt BT_CLR  &none        &none        &none        &none        &none                               &none   &none     &none    &none     &none  &none
     &bootloader &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &none                               &none   &none     &none    &none     &none  &bootloader
     &sys_reset  &none        &none        &none        &ext_power EP_OFF &ext_power EP_ON               &none   &none     &none    &none     &none  &sys_reset
                 &none        &none        &trans       &trans       &trans                              &trans  &trans    &trans   &none     &none
                                           &trans       &trans                                           &trans  &trans    &trans   &trans
            >;

            display-name = "SYS";
        };
        scrl_layer {
            bindings = <
     &trans     &trans    &trans    &trans   &trans   &trans                       &mkp RCLK     &trans    &trans    &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                       &mkp MCLK     &trans    &trans    &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                       &trans        &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans   &trans   &trans                       &trans        &trans    &trans    &kp C_AC_BACK  &kp C_AC_FORWARD
                                    &trans   &trans                                &trans        &trans    &trans    &trans
            >;

            display-name = "SCRL";
        };
        snipe_layer {
            bindings = <
     &trans     &trans    &trans    &trans   &trans   &trans                       &mkp RCLK     &trans    &trans    &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                       &mkp MCLK     &trans    &trans    &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                       &trans        &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans   &trans   &trans                       &trans        &trans    &trans    &kp C_AC_BACK  &kp C_AC_FORWARD
                                    &trans   &trans                                &trans        &trans    &trans    &trans
            >;

            display-name = "SNPE";
        };
    };
};
