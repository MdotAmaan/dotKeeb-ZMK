#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <interfaces/hid-trackball.dtsi>

#define DEFAULT 0
#define GAME 1
#define L1 2
#define NAV 3
#define MSE 4
#define SYS 5
&hid_trackball_interface {
    automouse-layer = <4>;
    automouse-layer-timeout-ms = <600>;
};
/ {  
    combos {
        compatible = "zmk,combos";
        combo_sys {
            timeout-ms = <50>;
            key-positions = <38 39 40>;
            bindings = <&tog 5>;
        };
        combo_out_tog {
            timeout-ms = <25>;
            key-positions = <27 28 29>;
            bindings = <&out OUT_TOG>;
        };
        combo_meta {
            timeout-ms = <25>;
            key-positions = <39 40>;
            bindings = <&kp LGUI>;
        };
    };
    behaviors {
      hml: left_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <280>;                        // <---[[produces tap if held longer than tapping-term-ms]]
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 46 47>;    // <---[[right-hand keys]]
        hold-trigger-on-release;
      };
      hmr: left_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <280>;                        // <---[[produces tap if held longer than tapping-term-ms]]
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 41 42 43 44 45 48 49>;    // <---[[right-hand keys]]
        hold-trigger-on-release;
      };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    Q    |    W    |    F    |    P    |    B    |                                          |    J    |    L    |    U    |    Y    |    ;    |    \    |
// |   TAB   |    A    |    R    |    S    |    T    |    G    |                                          |    M    |    N    |    E    |    I    |    O    |    '    |
// |    `    |    Z    |    X    |    C    |    D    |    V    |                                          |    K    |    H    |    ,    |    .    |    /    |   CAPS  |
//           |    -    |    =    |   L1    |  SPACE  |   GUI   |                                          | RETURN  |   BSPC  |   L2    |    [    |    ]    |
//                               |  SHIFT  |   LALT  |                                                              |    DEL  |   L1    |
            bindings = <
    &kp ESC    &kp Q       &kp W       &kp F        &kp P        &kp B                                      &kp J        &kp L         &kp U        &kp Y    &kp SEMI  &tog 1
    &kp TAB    &hml LGUI A &hml LALT R &hml LSHFT S &hml LCTRL T &kp G                                      &kp M        &hmr LCTRL N  &hmr RSHFT E &hmr LALT I &hmr LGUI    &kp SQT
    &kp GRAVE  &kp Z       &kp X       &kp C        &kp D        &kp V                                      &kp K        &kp H         &kp COMMA    &kp DOT  &kp FSLH  &kp BSLH
               &kp MINUS   &kp EQUAL   &kp SPACE    &kp LCTRL    &mo 2                                      &lt 3 RET    &kp RSHFT     &kp BSPC     &kp LBKT &kp RBKT
                                   &kp LALT     &kp LSHFT                                               &kp RALT  &kp DEL
            >;
        };

        game_layer {
            bindings = <
     &kp L      &kp ESC   &kp Q     &kp W     &kp E     &kp R                                            &kp Y     &kp U     &kp I     &kp O    &kp P     &tog 1
     &kp TAB    &kp LSHFT &kp A     &kp S     &kp D     &kp F                                            &kp H     &kp J     &kp K     &kp L    &kp SEMI  &kp SQT
     &kp B      &kp LCTRL &kp Z     &kp X     &kp C     &kp V                                            &kp N     &kp M     &kp COMMA &kp DOT  &kp FSLH  &kp BSLH
                &kp Y     &kp O     &kp T     &kp SPACE &mo 2                                            &trans    &trans    &trans    &kp LBKT &kp RBKT
                                    &kp V     &kp M                                                                &trans    &trans
            >;
        };

        l1_layer {
            bindings = <
    &caps_word      &kp F1       &kp F2           &kp F3        &kp F4        &kp F5                         &kp F6    &kp F7    &kp F8    &kp F9        &kp F10   &kp F11
    &kp LG(LS(S))   &hml LGUI N1 &hml LALT N2     &hml LSHFT N3 &hml LCTRL N4 &kp N5                         &kp N6    &hmr LCTRL N7 &hmr RSHFT N8 &hmr LALT N9 &hmr LGUI N0 &kp F12
    &kp LC(LA(DEL)) &kp LA(F4)   &kp C_PP         &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP                   &none     &tb_cyc_dpi &tb_tg_scroll  &trans &trans    &tb_bootloader
                  &kp C_AC_BACK  &kp C_AC_FORWARD &trans        &trans        &trans                         &trans    &trans    &trans    &trans        &trans
                                                  &trans        &trans                                                &trans    &trans
            >;
        };

        nav_layer {
            bindings = <
     &trans     &trans    &trans    &trans   &trans   &trans                                             &none       &mkp LCLK &mkp MCLK &mkp RCLK &none     &none
     &trans     &trans    &trans    &trans   &trans   &trans                                             &none       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &none
     &trans     &trans    &trans    &trans   &trans   &trans                                             &none       &kp HOME  &kp PG_DN &kp PG_UP &kp END   &none
                &trans    &trans    &trans   &trans   &trans                                             &trans      &trans    &trans    &kp C_AC_BACK  &kp C_AC_FORWARD
                                    &trans   &trans                                                                  &trans    &trans
            >;
        };

        mouse_layer {
            bindings = <
     &trans     &trans    &trans    &trans   &trans   &trans                                             &mkp LCLK     &mkp RCLK &trans    &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                                             &tb_tg_scroll &mkp MCLK &mkp MCLK &trans  &trans   &trans
     &trans     &trans    &trans    &trans   &trans   &trans                                             &trans        &trans    &trans    &trans  &trans   &trans
                &trans    &trans    &trans   &trans   &trans                                             &trans        &trans    &trans    &kp C_AC_BACK  &kp C_AC_FORWARD
                                    &trans   &trans                                                                    &trans    &trans
            >;
        };

        sys_layer {
            bindings = <
     &bt BT_CLR  &none        &none        &none        &none        &bt BT_CLR                          &none   &none     &none    &none     &none  &none
     &bootloader &out OUT_TOG &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &none                               &none   &none     &none    &none     &none  &none
     &sys_reset  &none        &none        &none        &ext_power EP_OFF &ext_power EP_ON               &none   &none     &none    &none     &none  &none
                 &none        &none        &trans       &trans       &trans                              &trans  &trans    &trans   &none     &none
                                                        &trans       &trans                              &trans  &trans
            >;
        };
    };
};
