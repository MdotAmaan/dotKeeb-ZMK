#include "dotkeeb.dtsi"
#define INPUT_EV_KEY 0x01               /**< Key event */
#define INPUT_EV_REL 0x02               /**< Relative coordinate event */
#define INPUT_EV_ABS 0x03               /**< Absolute coordinate event */
#define INPUT_EV_MSC 0x04               /**< Miscellaneous event */
#define INPUT_EV_VENDOR_START 0xf0      /**< Vendor specific event start */
#define INPUT_EV_VENDOR_STOP 0xff       /**< Vendor specific event stop */

#define INPUT_REL_X 0x00                /**< Relative X coordinate */
#define INPUT_REL_Y 0x01                /**< Relative Y coordinate */
#define INPUT_REL_WHEEL 0x08            /**< Relative wheel coordinate */
#define INPUT_REL_HWHEEL 0x06           /**< Relative horizontal wheel coordinate */
#define INPUT_REL_MISC 0x09             /**< Relative misc coordinate */
#define DEF 0 // default layer
#define MSK 4 // mouse key layer
#define MSC 6 // mouse scroll layer
#define MSS 7 // mouse snipe layer

&default_transform { 
    col-offset = <6>;
};

&kscan0 {
    col-gpios
        = <&pro_micro 9 GPIO_ACTIVE_HIGH> // col1
        , <&pro_micro 8 GPIO_ACTIVE_HIGH> // col2
        , <&pro_micro 7 GPIO_ACTIVE_HIGH> // col3
        , <&pro_micro 6 GPIO_ACTIVE_HIGH> // col4
        , <&pro_micro 5 GPIO_ACTIVE_HIGH> // col5
        , <&pro_micro 4 GPIO_ACTIVE_HIGH> // col6
        ;
};

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
                <NRF_PSEL(SPIM_MOSI, 0, 17)>,
                <NRF_PSEL(SPIM_MISO, 0, 17)>;
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
                <NRF_PSEL(SPIM_MOSI, 0, 17)>,
                <NRF_PSEL(SPIM_MISO, 0, 17)>;
            low-power-enable;
        };
    };
};

&spi0 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>;

    trackball: trackball@0 {
        status = "okay";
        compatible = "pixart,pmw3610";
        reg = <0>;
        spi-max-frequency = <2000000>;
        irq-gpios = <&gpio0 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        cpi = <600>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
    };
};

/ {
  tb0_mmv_ibl {
    compatible = "zmk,input-behavior-listener";
    device = <&trackball>;

    /* only enable in default layer (DEF) & mouse key layer (MSK) */
    // layers = <DEF MSK>;

    /* designed for switching to mouse scroll, xy-swap, precise-mode+, etc */
    evt-type = <INPUT_EV_REL>;
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    scale-multiplier = <1>;
    scale-divisor = <1>;

    /* bind a behavior to auto activate MSK layer for &mkp */
    bindings = <&ib_tog_layer MSK>;

    /* align to CCW 45 degree */
    rotate-deg = <315>;
    /* NOTE 1: This settings do not compitable with y-invert and x-invert */
    /* NOTE 2: Floating point computation requires alot of ram. */
    /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
  };

  /* input config for mouse scroll mode on momentary mouse scoll layer (MSC) */
  tb0_msl_ibl {
    compatible = "zmk,input-behavior-listener";
    device = <&trackball>;
    layers = <MSC>;
    evt-type = <INPUT_EV_REL>;
    
    x-input-code = <INPUT_REL_MISC>;
    y-input-code = <INPUT_REL_WHEEL>;

    y-invert;

    bindings = <&ib_wheel_scaler 1 42>, <&ib_misc_scaler 0 0>;
  };

  // Mouse snipe layer
  tb0_mss_ibl {
    compatible = "zmk,input-behavior-listener";
    device = <&trackball>;
    layers = <MSS>;
    evt-type = <INPUT_EV_REL>;
    x-input-code = <INPUT_REL_MISC>;
    y-input-code = <INPUT_REL_WHEEL>;

    bindings = <&ib_misc_scaler 1 2>, <&ib_misc_scaler 1 2>;
  };

  /* adjust cooldown waiting period for mouse key layer (MSK) after activated */
  ib_tog_layer: ib_tog_layer {
    compatible = "zmk,input-behavior-tog-layer";
    #binding-cells = <1>;
    time-to-live-ms = <2000>;
  };

  /* define a resolution down scaler only for INPUT_REL_WHEEL */
  ib_wheel_scaler: ib_wheel_scaler {
    compatible = "zmk,input-behavior-scaler";
    #binding-cells = <2>;
    evt-type = <INPUT_EV_REL>;
    input-code = <INPUT_REL_WHEEL>;
  };

  ib_misc_scaler: ib_misc_scaler {
    compatible = "zmk,input-behavior-scaler";
    #binding-cells = <2>;
    evt-type = <INPUT_EV_REL>;
    input-code = <INPUT_REL_MISC>;
  };
};

